// api.js

// getComments: Получает комментарии с сервера.
//  Асинхронно запрашивает список комментариев с сервера по указанному URL.
//  В случае успеха возвращает массив объектов комментариев, в случае ошибки выбрасывает исключение.

// postComment: Отправляет комментарий на сервер.
//  Асинхронно отправляет текст комментария на сервер для сохранения.
//  Требует наличия токена авторизации пользователя.
//  В случае успеха возвращает данные, в случае ошибки выбрасывает исключение.

// loginUser: Авторизует пользователя.
//  Асинхронно отправляет логин и пароль пользователя на сервер для аутентификации.
//  В случае успеха возвращает токен и имя пользователя, в случае ошибки выбрасывает исключение.

// registerUser: Регистрирует пользователя.
//  Асинхронно отправляет данные для регистрации нового пользователя на сервер.
//  В случае успеха возвращает токен и имя пользователя, в случае ошибки выбрасывает исключение.

// state.js

// getReplyToId: Возвращает id ответа.
//  Возвращает текущее значение id комментария, на который пользователь отвечает.

// setReplyToId: Устанавливает id ответа.
//  Устанавливает значение id комментария, на который пользователь отвечает.

// fetchComments: Загружает комментарии.
//  Асинхронно загружает комментарии с сервера и обновляет состояние приложения.
//  В случае успеха обновляет массив комментариев в state, в случае ошибки показывает сообщение об ошибке.

// delay: Создаёт задержку.
//  Создает Promise, который разрешается после указанного интервала времени.
//  Используется для имитации задержки при выполнении асинхронных операций.

// render.js

// renderComments: Отрисовывает комментарии и форму/ссылку авторизации.
//  Отрисовывает HTML-структуру комментариев, формы добавления комментария или ссылок на авторизацию/регистрацию в зависимости от состояния приложения.
//  Использует данные из state для формирования HTML.

// handlers.js

// initHandlers: Запускает обработчики.
//  Инициализирует все обработчики событий для элементов на странице.
//  Вызывается после отрисовки комментариев.

// initEventListeners: Инициализирует обработчики событий.
//  Навешивает обработчики событий на элементы формы добавления комментария, кнопки лайков, ссылки авторизации/регистрации и кнопку выхода.

// login.js

// renderLogin: Отрисовывает форму логина.
//  Отрисовывает HTML-структуру формы логина.
//  Позволяет пользователю ввести логин и пароль для авторизации.

// register.js

// renderRegister: Отрисовывает форму регистрации.
//  Отрисовывает HTML-структуру формы регистрации.
//  Позволяет пользователю ввести данные для регистрации нового аккаунта.

// sanitize.js

// sanitize: Экранирует HTML.
//  Заменяет специальные HTML-символы на их эквиваленты, чтобы предотвратить XSS-атаки.
//  Используется для безопасного отображения текста комментариев.